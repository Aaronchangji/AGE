// Copyright 2022 HDL
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto2";
package AGE.ProtoBuf.CacheWorker;

import "base.proto";

option cc_generic_services = true;

message SendMsgRequest {
    required AGE.ProtoBuf.Msg msg = 1;
    optional AGE.ProtoBuf.Plan plan = 2;
}

message SendMsgResponse {
    required bool success = 1;
}

message ThptTestQueryReq {
    required string config = 1;
}

message ThptTestQueryResp {
    required bool success = 1;
    repeated string seeds = 2;
}

message GetHistogramReq {
    required string label = 1;
    required string prop = 2;
    required uint32 granularity = 3;
    required uint32 direction = 4;
}
message GetHistogramResp {
    required bool success = 1;
    required string hist = 2;
}

message ApplyRLActionReq {
    required bytes action = 1;
}
message ApplyRLActionResp {
    required bool success = 1;
}

message GetThptMetricsReq {
    required uint64 duration = 1;
}
message GetThptMetricsResp {
    required bool success = 1;
    required bytes metrics = 2;
}

service Service {
    rpc SendMsg(SendMsgRequest) returns (SendMsgResponse);
    rpc GetThptTestQueries(ThptTestQueryReq) returns (ThptTestQueryResp);
    rpc GetHistogram(GetHistogramReq) returns (GetHistogramResp);
    rpc ApplyRLAction(ApplyRLActionReq) returns (ApplyRLActionResp);
    rpc GetThptMetrics(GetThptMetricsReq) returns (GetThptMetricsResp);
}